syntax = "proto3";

package auth;

import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/Fi44er/PulseMap/backend/auth_service/proto/out;auth";


service Auth {
  rpc Register(RegisterReq) returns (RegisterRes) {
    option (google.api.http) = {
      post: "/v1/auth/register"
      body: "*"
    };
  };
  rpc Login(LoginReq) returns (LoginRes) {
    option (google.api.http) = {
      post: "/v1/auth/login"
      body: "*"
    };
  };
  rpc Logout(LogoutReq) returns (LogoutRes) {
    option (google.api.http) = {
      post: "/v1/auth/logout"
      body: "*"
    };
  };
}

message User {
  string id = 1;
  string username = 2;
  string email = 3;
  string password_hash = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  bool is_active = 7;
}

message RegisterReq {
  string username = 1 [(buf.validate.field).string.min_len = 3, (buf.validate.field).required = true];  // Минимум 3 символа и поле обязательно
  string email = 2 [(buf.validate.field).string.email = true, (buf.validate.field).required = true];    // Валидация email и поле обязательно
  string password = 3 [(buf.validate.field).string.min_len = 8, (buf.validate.field).required = true];  // Минимум 8 символов для пароля и поле обязательно
}

message RegisterRes {
  User user = 1; 
}

message LoginReq {
  string email = 1 [(buf.validate.field).string.email = true, (buf.validate.field).required = true];   // Валидация email
  string password = 2 [(buf.validate.field).string.min_len = 8, (buf.validate.field).required = true]; // Минимум 8 символов для пароля
}

message LoginRes {
  bool status = 1;
}

message LogoutReq {
  string id = 1 [(buf.validate.field).string.min_len = 1, (buf.validate.field).required = true];  // ID не может быть пустым
}

message LogoutRes {
  bool status = 1;
}
